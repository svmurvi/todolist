{"version":3,"sources":["Components/TodosList/TaskField/taskField.module.css","Components/Input/input.module.css","Components/TodosList/todosList.module.css","Components/Context/index.jsx","Components/Input/index.jsx","Components/TodosList/TaskField/index.jsx","Components/TodosList/index.jsx","App.jsx","index.jsx"],"names":["module","exports","Context","createContext","todoList","title","isDone","clicked","AppContext","children","useState","todos","setTodos","input","setInput","Provider","value","Input","useContext","addTodo","length","prev","TextField","className","styles","textField","variant","label","onChange","event","target","handleInputValue","onKeyDown","key","Button","buttonAdd","onClick","TaskField","props","deleteTodo","id","filter","_","index","handleClicked","map","item","ListItem","listItem","Checkbox","checked","completed","handleChange","color","data-id","text","updateTodo","onBlur","ListItemText","primary","doneTask","undoneTask","parentNode","IconButton","currentTarget","fontSize","TodosList","todosList","String","List","list","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da21323a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"doneTask\":\"taskField_doneTask__3E883\",\"undoneTask\":\"taskField_undoneTask__orkGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textField\":\"input_textField__2_IGI\",\"mui-auto-fill-cancel\":\"input_mui-auto-fill-cancel__cmWAm\",\"buttonAdd\":\"input_buttonAdd__DMud4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"todosList_list__UcD9a\"};","import React, { createContext, useState } from 'react';\n\nconst Context = createContext();\n\nconst todoList = [{\n  title: 'task 1',\n  isDone: false,\n  clicked: false\n},\n{\n  title: 'task 2',\n  isDone: true,\n  clicked: false\n},\n{\n  title: 'task 3',\n  isDone: false,\n  clicked: false\n}];\n\nfunction AppContext({ children }) {\n  const [todos, setTodos] = useState(todoList);\n  const [input, setInput] = useState('');\n  return (\n    <Context.Provider\n      value={{\n        todos, setTodos, input, setInput\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { AppContext, Context };\n","import React, { useContext } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport styles from './input.module.css';\nimport { Context } from '../Context';\n\nfunction Input() {\n  const { input, setInput, setTodos } = useContext(Context);\n  function handleInputValue(event) {\n    setInput(event.target.value);\n  }\n  function addTodo() {\n    if (input.length && input !== '') {\n      setTodos((prev) => [...prev, { title: input, isDone: false, clicked: false }]);\n      setInput('');\n    }\n  }\n  return (\n    <>\n      <TextField\n        className={styles.textField}\n        variant=\"outlined\"\n        label=\"Input Task\"\n        value={input}\n        onChange={(event) => handleInputValue(event)}\n        onKeyDown={(event) => (event.key === 'Enter' ? addTodo() : '')}\n      />\n      <Button\n        variant=\"outlined\"\n        className={styles.buttonAdd}\n        onClick={addTodo}\n      >\n        Add task\n      </Button>\n    </>\n  );\n}\n\nexport default Input;\n","import React, { useContext } from 'react';\nimport {\n  IconButton, ListItem, ListItemText, TextField\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport styles from './taskField.module.css';\nimport { Context } from '../../Context';\n\nfunction TaskField(props) {\n  const { setTodos } = useContext(Context);\n\n  function deleteTodo(id) {\n    setTodos((prev) => prev.filter((_, index) => id !== index));\n  }\n\n  function handleChange(event) {\n    setTodos((prev) => prev.map((item, index) => {\n      if (+event.target.id === index) {\n        item.isDone = !item.isDone;\n      }\n      return item;\n    }));\n  }\n\n  function handleClicked(id) {\n    setTodos((prev) => prev.map((item, index) => {\n      if (index === +id) {\n        item.clicked = !item.clicked;\n      }\n      if (item.title === '') {\n        deleteTodo(index);\n      }\n      return item;\n    }));\n  }\n\n  function updateTodo(event) {\n    setTodos((prev) => prev.map((item, index) => {\n      if (index === +event.target.id) {\n        item.title = event.target.value;\n      }\n      return item;\n    }));\n  }\n\n  return (\n    <ListItem className={styles.listItem}>\n      <Checkbox\n        id={props.id}\n        checked={props.completed}\n        onChange={(event) => handleChange(event)}\n        color=\"default\"\n      />\n      {!props.clicked\n        ? (\n          <>\n            <ListItemText\n              id={props.id}\n              primary={props.text}\n              className={props.completed ? styles.doneTask : styles.undoneTask}\n              onClick={(event) => handleClicked(+event.target.parentNode.id)}\n            />\n            <IconButton\n              onClick={(event) => deleteTodo(+event.currentTarget.id)}\n              id={props.id}\n            >\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </>\n        )\n        : (\n          <TextField\n            id={props.id}\n            data-id={props.id}\n            value={props.text}\n            onChange={((event) => updateTodo(event))}\n            onBlur={(event) => handleClicked(+event.target.id)}\n            onKeyDown={(event) => (event.key === 'Enter' ? handleClicked(+event.target.id) : '')}\n          />\n        )}\n    </ListItem>\n  );\n}\n\nexport default TaskField;\n","import { List } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { Context } from '../Context';\nimport TaskField from './TaskField';\nimport styles from './todosList.module.css';\n\nfunction TodosList() {\n  const { todos } = useContext(Context);\n  const todosList = todos.map((item, index) => (\n    <TaskField\n      key={index}\n      id={String(index)}\n      text={item.title}\n      completed={item.isDone}\n      clicked={item.clicked}\n    />\n  ));\n  return (\n    <List className={styles.list}>\n      {todosList}\n    </List>\n  );\n}\n\nexport default TodosList;\n","import React from 'react';\nimport Input from './Components/Input';\nimport { AppContext } from './Components/Context';\nimport TodosList from './Components/TodosList';\n\nfunction App() {\n  return (\n    <AppContext>\n      <Input />\n      <TodosList />\n    </AppContext>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}